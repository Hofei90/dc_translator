import pathlib

import deepl
import discord
import toml


SKRIPTPFAD = pathlib.Path(__file__).parent
CONFIGPFAD = SKRIPTPFAD / "config.toml"
CONFIG = toml.load(CONFIGPFAD)
DEBUG = CONFIG["debug"]

client = discord.Client()
translator = deepl.Translator(CONFIG["deepl_api_key"])


def set_target_language(emoji):
    """
    Liste verfÃ¼gbarer Sprachen
    https://www.deepl.com/de/docs-api/translating-text/request/
    """

    if emoji == "ğŸ‡§ğŸ‡¬":
        target_language = "bg"  # bulgarisch
    elif emoji == "ğŸ‡¨ğŸ‡¿":
        target_language = "cs"  # tschechisch
    elif emoji == "ğŸ‡©ğŸ‡°":
        target_language = "da"  # dÃ¤nisch
    elif emoji == "ğŸ‡©ğŸ‡ª":
        target_language = "de"  # deutsch
    elif emoji == "ğŸ‡¬ğŸ‡§":
        target_language = "en-GB"  # uk-englisch
    elif emoji == "ğŸ‡ºğŸ‡²":
        target_language = "en-US"  # us-englisch
    elif emoji == "ğŸ‡ªğŸ‡¸" or emoji == "ğŸ‡ªğŸ‡¦":
        target_language = "es"  # spanisch
    elif emoji == "ğŸ‡ªğŸ‡ª":
        target_language = "et"  # estnisch
    elif emoji == "ğŸ‡«ğŸ‡®":
        target_language = "fi"  # finnisch
    elif emoji == "ğŸ‡«ğŸ‡·":
        target_language = "fr"  # franzÃ¶sisch
    elif emoji == "ğŸ‡­ğŸ‡º":
        target_language = "hu"  # ungarisch
    elif emoji == "ğŸ‡®ğŸ‡¹":
        target_language = "it"  # italienisch
    elif emoji == "ğŸ‡¯ğŸ‡µ":
        target_language = "ja"  # japanisch
    elif emoji == "ğŸ‡±ğŸ‡¹":
        target_language = "lt"  # litaunisch
    elif emoji == "ğŸ‡±ğŸ‡»":
        target_language = "lv"  # lettisch
    elif emoji == "ğŸ‡³ğŸ‡±":
        target_language = "nl"  # niederlÃ¤ndisch
    elif emoji == "ğŸ‡µğŸ‡±":
        target_language = "pl"  # polnisch
    elif emoji == "ğŸ‡µğŸ‡¹":
        target_language = "pt"  # portogisisch
    elif emoji == "ğŸ‡·ğŸ‡´":
        target_language = "ro"  # rumÃ¤nisch
    elif emoji == "ğŸ‡·ğŸ‡º":
        target_language = "ru"  # russisch
    elif emoji == "ğŸ‡¸ğŸ‡°":
        target_language = "sk"  # slovakisch
    elif emoji == "ğŸ‡¸ğŸ‡®":
        target_language = "sl"  # slovenisch
    elif emoji == "ğŸ‡¸ğŸ‡ª":
        target_language = "sv"  # schwedisch
    elif emoji == "ğŸ‡¨ğŸ‡³":
        target_language = "zh"  # chinesisch
    else:
        return
    return target_language


@client.event
async def on_reaction_add(reaction, _):  # (reation, user)
    if DEBUG:
        print(reaction.emoji)

    target_language = set_target_language(str(reaction.emoji))
    if target_language is None:
        # Kein Emoji welches eine Ã¼bersetzbare LÃ¤nderflagge ist gewÃ¤hlt
        return

    result = translator.translate_text(reaction.message.content, target_lang=target_language)

    if DEBUG:
        print(result)

    await reaction.message.reply(result.text)


client.run(CONFIG["dc_token"])
